{"version":3,"file":"static/js/774.185d7e92.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IACxCY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASC,EAAeC,GAC7B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACQf,EADR,oBAKxB,SAASgB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,oBAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASY,QAGvB,SAASC,EAAiBH,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,2BAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASM,EAAyBC,GACvC,OAAOnB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBoB,EADtB,2BAE3BR,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,a,yGCpC9B,EAA0B,sB,SCIX,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BN,GAASV,KAAKc,KACxC,CAACJ,KAEF,0BACE,wBACGG,EAAQI,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACX,0BACGF,IACC,gBACEG,IAAG,0CAAqCH,GACxCI,IAAKH,EACLI,UAAWC,KAGf,uBAAIL,KACJ,uCAAeC,OATRH","sources":["services/movies-api.js","webpack://goit-react-hw-05-movies/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API = 'bd5e1631ed489de1dc8ff7eb8202de51';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${API}`\n  ).then(response => response.results);\n}\n\nexport function fetchMovieById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API}&language=en-US`\n  );\n}\n\nexport function fetchCreditsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API}&language=en-US`\n  ).then(response => response.cast);\n}\n\nexport function fetchReviewsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n\nexport function fetchMoviesBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Cast_profile__e6IQu\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as moviesAPI from '../../services/movies-api';\nimport styles from './Cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState([]);\n  useEffect(() => {\n    moviesAPI.fetchCreditsById(movieId).then(setCredits);\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {credits.map(({ cast_id, profile_path, name, character }) => (\n          <li key={cast_id}>\n            {profile_path && (\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${profile_path}`}\n                alt={name}\n                className={styles.profile}\n              />\n            )}\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","then","results","fetchMovieById","id","fetchCreditsById","cast","fetchReviewsById","fetchMoviesBySearchQuery","query","Cast","movieId","useParams","useState","credits","setCredits","useEffect","moviesAPI","map","cast_id","profile_path","name","character","src","alt","className","styles"],"sourceRoot":""}