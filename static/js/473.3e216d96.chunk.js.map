{"version":3,"file":"static/js/473.3e216d96.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IACxCY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASC,EAAeC,GAC7B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACQf,EADR,oBAKxB,SAASgB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,oBAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASY,QAGvB,SAASC,EAAiBH,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,2BAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASM,EAAyBC,GACvC,OAAOnB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBoB,EADtB,2BAE3BR,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,a,yGCpC9B,EAAyB,wB,SCIV,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BN,GAASV,KAAKc,KACxC,CAACJ,KAEF,0BACE,wBACGG,EAAQI,OAAS,EAChBJ,EAAQK,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,cAAGC,UAAWC,EAAd,SAA8BH,KAC9B,uBAAIC,MAFGjB,OAMX","sources":["services/movies-api.js","webpack://goit-react-hw-05-movies/./src/views/Reviews/Reviews.module.css?ff11","views/Reviews/Reviews.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API = 'bd5e1631ed489de1dc8ff7eb8202de51';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${API}`\n  ).then(response => response.results);\n}\n\nexport function fetchMovieById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API}&language=en-US`\n  );\n}\n\nexport function fetchCreditsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API}&language=en-US`\n  ).then(response => response.cast);\n}\n\nexport function fetchReviewsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n\nexport function fetchMoviesBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"author\":\"Reviews_author__NQfuB\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as moviesAPI from '../../services/movies-api';\nimport styles from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    moviesAPI.fetchReviewsById(movieId).then(setReviews);\n  }, [movieId]);\n  return (\n    <div>\n      <ul>\n        {reviews.length > 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p className={styles.author}>{author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","then","results","fetchMovieById","id","fetchCreditsById","cast","fetchReviewsById","fetchMoviesBySearchQuery","query","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","length","map","author","content","className","styles"],"sourceRoot":""}