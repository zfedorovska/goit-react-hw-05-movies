{"version":3,"file":"static/js/262.4cd2b296.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IACxCY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASC,EAAeC,GAC7B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACQf,EADR,oBAKxB,SAASgB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,oBAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASY,QAGvB,SAASC,EAAiBH,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,2BAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASM,EAAyBC,GACvC,OAAOnB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBoB,EADtB,2BAE3BR,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,a,yGCpC9B,EAAwB,oBAAxB,EAAwD,wB,SCIzC,SAASQ,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAIA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAgCd,KAAKY,KACpC,KAED,4BACE,eAAIG,UAAWC,EAAf,6BACA,eAAID,UAAWC,EAAf,SACGL,GACCA,EAAOM,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,yBACE,UAAC,KAAD,CAAMC,GAAE,iBAAYjB,GAApB,UACGe,EACAC,MAHIhB","sources":["services/movies-api.js","webpack://goit-react-hw-05-movies/./src/views/Home/Home.module.css?eca4","views/Home/Home.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API = 'bd5e1631ed489de1dc8ff7eb8202de51';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${API}`\n  ).then(response => response.results);\n}\n\nexport function fetchMovieById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API}&language=en-US`\n  );\n}\n\nexport function fetchCreditsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API}&language=en-US`\n  ).then(response => response.cast);\n}\n\nexport function fetchReviewsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n\nexport function fetchMoviesBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__FMwjM\",\"container\":\"Home_container__ct3+Q\"};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport styles from './Home.module.css';\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    moviesAPI.fetchTrendingMovies().then(setMovies);\n  }, []);\n  return (\n    <div>\n      <h1 className={styles.title}>Trending today</h1>\n      <ul className={styles.container}>\n        {movies &&\n          movies.map(({ id, title, name }) => (\n            <li key={id}>\n              <Link to={`movies/${id}`}>\n                {title}\n                {name}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["BASE_URL","API","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","then","results","fetchMovieById","id","fetchCreditsById","cast","fetchReviewsById","fetchMoviesBySearchQuery","query","HomeView","useState","movies","setMovies","useEffect","moviesAPI","className","styles","map","title","name","to"],"sourceRoot":""}