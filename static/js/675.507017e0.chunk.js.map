{"version":3,"file":"static/js/675.507017e0.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,qCACaC,IACxCY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASC,EAAeC,GAC7B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,oBACQf,EADR,oBAKxB,SAASgB,EAAiBD,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,oBAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASY,QAGvB,SAASC,EAAiBH,GAC/B,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACNgB,EADM,4BACgBf,EADhB,2BAE3BY,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,WAGvB,SAASM,EAAyBC,GACvC,OAAOnB,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBACsBoB,EADtB,2BAE3BR,MAAK,SAAAP,GAAQ,OAAIA,EAASQ,a,kHCpC9B,EAA4B,gCAA5B,EAAoE,4BAApE,EAAyG,6BAAzG,EAAmJ,iCAAnJ,EAA6L,6B,SCI9K,SAASQ,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAyBN,GAASV,KAAKc,KACtC,CAACJ,IAEJ,IAKwBO,EAFOC,EADRC,EAAOC,EAFxBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,mBAAQD,UAAWC,EAAeC,QAAS,kBAAMJ,GAAU,IAA3D,qBAGCR,IACC,iCACE,iBAAKU,UAAWC,EAAhB,WACE,gBACEE,IAAG,0CAAqCb,EAAMc,aAC9CC,IAAKf,EAAMM,MACXI,UAAWC,KAEb,4BACE,yBAnBWL,EAmBQN,EAAMM,MAnBPC,EAmBcP,EAAMgB,aAnB5B,UAAoBV,EAApB,YAA6BC,EAAKU,MAAM,KAAK,QAoBvD,yCAnBmBZ,EAmBoBL,EAAMkB,aAlBvDC,KAAKC,MAA0B,GAApBC,OAAOhB,KAkBR,QACA,sCACA,uBAAIL,EAAMsB,YACV,oCACA,wBArBYlB,EAqBQJ,EAAMI,OArBJA,EAAOmB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,eAwB/D,iBAAKhB,UAAWC,EAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMgB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["services/movies-api.js","webpack://goit-react-hw-05-movies/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API = 'bd5e1631ed489de1dc8ff7eb8202de51';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/all/day?api_key=${API}`\n  ).then(response => response.results);\n}\n\nexport function fetchMovieById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}?api_key=${API}&language=en-US`\n  );\n}\n\nexport function fetchCreditsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API}&language=en-US`\n  ).then(response => response.cast);\n}\n\nexport function fetchReviewsById(id) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n\nexport function fetchMoviesBySearchQuery(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API}&query=${query}&language=en-US&page=1`\n  ).then(response => response.results);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__YdSwN\",\"movie\":\"MovieDetails_movie__QO56W\",\"poster\":\"MovieDetails_poster__Bnqsi\",\"additional\":\"MovieDetails_additional__rtG-m\",\"goBack\":\"MovieDetails_goBack__yo8yj\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams, Outlet, useNavigate } from 'react-router-dom';\nimport * as moviesAPI from '../../services/movies-api';\nimport styles from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    moviesAPI.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  const navigate = useNavigate();\n\n  const getMovieTitle = (title, date) => `${title} ${date.split('-')[0]}`;\n  const getUsereScoreInPercent = userScore =>\n    Math.round(Number(userScore) * 10);\n  const getGenresString = genres => genres.map(genre => genre.name).join(' ');\n\n  return (\n    <div className={styles.container}>\n      <button className={styles.goBack} onClick={() => navigate(-1)}>\n        Go back\n      </button>\n      {movie && (\n        <>\n          <div className={styles.movie}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n              className={styles.poster}\n            />\n            <div>\n              <h1>{getMovieTitle(movie.title, movie.release_date)}</h1>\n              <p>User score: {getUsereScoreInPercent(movie.vote_average)}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h2>Genres</h2>\n              <p>{getGenresString(movie.genres)}</p>\n            </div>\n          </div>\n          <div className={styles.additional}>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["BASE_URL","API","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","then","results","fetchMovieById","id","fetchCreditsById","cast","fetchReviewsById","fetchMoviesBySearchQuery","query","MovieDetails","movieId","useParams","useState","movie","setMovie","useEffect","moviesAPI","genres","userScore","title","date","navigate","useNavigate","className","styles","onClick","src","poster_path","alt","release_date","split","vote_average","Math","round","Number","overview","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}